// { Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


 // } Driver Code Ends
//User function template for C++
class Solution{
public:	

    void heapify(int arr[],int n,int i){
        int largest=i;
        int l=i*2+1;
        int r=i*2+2;
    
        if(l<n && arr[largest]<arr[l]){
            largest = l;
        }
    
        if(r<n && arr[largest]<arr[r]){
            largest = r;
        }
    
        if(i != largest){
            swap(arr[i],arr[largest]);
            heapify(arr,n,largest);
        }
    }
	vector<int> kLargest(int arr[], int n, int k) {
	    int index=(n/2)-1;

        for(int i=index;i>=0;i--){
            heapify(arr,n,i);
        }
    
        vector<int>res;
        
        for(int i=(n-1);i>=(n-k);i--){
            res.push_back(arr[0]);
            swap(arr[0],arr[i]);
            heapify(arr,i,0);
        }
        
        return res;
    }

};

// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, k;
        cin >> n >> k;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.kLargest(arr, n, k);
        for (auto x : ans) {
            cout << x << " ";
        }
        cout << "\n";
    }
    return 0;
}
  // } Driver Code Ends
